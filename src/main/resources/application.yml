server:
  port: 9091
  servlet:
    context-path: /demo
  undertow:
      accesslog:
        #是否打开 undertow 日志，默认为 false
        enabled: true
        #设置访问日志所在目录
        dir: logs
      #指定工作者线程的 I/0 线程数，默认为 2 或者 CPU 的个数
      io-threads: 2
      #指定工作者线程个数，默认为 I/O 线程个数的 8 倍
      worker-threads: 8
      #设置 HTTP POST 内容的最大长度，默认不做限制
      max-http-post-size: 0
spring:
    datasource:
      url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncodidng=utf-8&allowMultiQueries=true
      username: root
      password: root
      #schema: database/import.sql
      #sql-script-encoding: utf-8
      driver-class-name: com.mysql.jdbc.Driver
      hikari:
        maximum-pool-size: 100
        minimum-idle: 10
        #此属性控制客户端（即您）等待池中连接的最大毫秒数
        connection-timeout: 60000
        #此属性控制允许连接在池中空闲的最长时间 值为0表示永远不会从池中删除空闲连接。允许的最小值为10000毫秒（10秒）。 默认值：600000（10分钟）
        idle-timeout: 600000
        #此属性控制池中连接的最长生命周期。使用中的连接永远不会退役，只有当它关闭时才会被删除。在逐个连接的基础上，应用微小的负衰减以避免池中的大量灭绝。 我们强烈建议您设置此值，它应比任何数据库或基础结构强加的连接时间限制短几秒。 值0表示没有最大寿命（无限寿命），当然主题是idleTimeout设置。 默认值：1800000（30分钟）
        max-lifetime: 1800000
        #此属性控制连接测试活动的最长时间。该值必须小于connectionTimeout。最低可接受的验证超时为250毫秒。 默认值：5000
        validationTimeout: 250
        #jdbc-url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncodidng=utf-8&allowMultiQueries=true
        #username: root
        #password: root
        #driver-class-name: com.mysql.jdbc.Driver
    cache:
          ehcache:
            config: classpath:ehcache.xml
mybatis:
  type-aliases-package: com.ddzj.entity
  mapper-locations: classpath*:mapper/*Mapper.xml
logging:
  level:
    com.ddzj.repository: debug
debug: false
